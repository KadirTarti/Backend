{
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "Stock Management API",
      "description": "Stock Management System",
      "termsOfService": "http://www.github.com/KadirTarti",
      "contact": {
        "name": "Clarusway",
        "email": "tartilaci@gmail.com"
      },
      "license": {
        "name": "ISC Licence"
      }
    },
    "host": "127.0.0.1:8000",
    "basePath": "/",
    "schemes": [
      "http",
      "https"
    ],
    "securityDefinitions": {
      "Token": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Simple Token Authentication * Example: <b>Token ...tokenKey...</b>"
      },
      "Bearer": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "JWT Authentication * Example: <b>Bearer ...accessToken...</b>"
      }
    },
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "paths": {
      "/auth/login": {
        "post": {
          "tags": [
            "Authentication"
          ],
          "summary": "Login",
          "description": "Login with username (or email) and password.",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "test"
                  },
                  "password": {
                    "type": "string",
                    "example": "1234"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        }
    },
    "/auth/refresh": {
        "post": {
          "tags": [
            "Authentication"
          ],
          "summary": "JWT: Refresh",
          "description": "Delete token key.",
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        }
      },
      "/auth/logout": {
        "get": {
          "tags": [
            "Authentication"
          ],
          "summary": "Token: Logout",
          "description": "Delete token key.",
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        }
      },
      "/users/": {
        "get": {
          "tags": [
            "Users"
          ],
          "summary": "List Users",
          "description": "  You can send query with endpoint for search[], sort[], page and limit.  <ul> Examples:   <li>URL/?<b>search[field1]=value1&search[field2]=value2</b></li>   <li>URL/?<b>sort[field1]=1&sort[field2]=-1</b></li>   <li>URL/?<b>page=2&limit=1</b></li>  </ul>  ",
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        },
        "post": {
          "tags": [
            "Users"
          ],
          "summary": "Create User",
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "test"
                  },
                  "password": {
                    "type": "string",
                    "example": "1234"
                  },
                  "email": {
                    "type": "string",
                    "example": "test@site.com"
                  },
                  "isActive": {
                    "type": "boolean",
                    "example": true
                  },
                  "isAdmin": {
                    "type": "boolean",
                    "example": false
                  }
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Created"
            }
          }
        }
      },
      "/users/{id}": {
        "get": {
          "tags": [
            "Users"
          ],
          "summary": "Get Single User",
          "description": "",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        },
        "put": {
          "tags": [
            "Users"
          ],
          "summary": "Update User",
          "description": "",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "test"
                  },
                  "password": {
                    "type": "string",
                    "example": "1234"
                  },
                  "email": {
                    "type": "string",
                    "example": "test@site.com"
                  },
                  "isActive": {
                    "type": "boolean",
                    "example": true
                  },
                  "isAdmin": {
                    "type": "boolean",
                    "example": false
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        },
        "delete": {
          "tags": [
            "Users"
          ],
          "summary": "Delete User",
          "description": "",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "patch": {
          "tags": [
            "Users"
          ],
          "summary": "Update User",
          "description": "",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "test"
                  },
                  "password": {
                    "type": "string",
                    "example": "1234"
                  },
                  "email": {
                    "type": "string",
                    "example": "test@site.com"
                  },
                  "isActive": {
                    "type": "boolean",
                    "example": true
                  },
                  "isAdmin": {
                    "type": "boolean",
                    "example": false
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        }
      },
      "/categories/": {
        "get": {
          "tags": [
            "Categories"
          ],
          "summary": "List Categories",
          "description": "  You can send query with endpoint for search[], sort[], page and limit.  <ul> Examples:   <li>URL/?<b>search[field1]=value1&search[field2]=value2</b></li>   <li>URL/?<b>sort[field1]=1&sort[field2]=-1</b></li>   <li>URL/?<b>page=2&limit=1</b></li>  </ul>  ",
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        },
        "post": {
          "tags": [
            "Categories"
          ],
          "summary": "Create Category",
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Category"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Created"
            }
          }
        }
      },
      "/categories/{id}": {
        "get": {
          "tags": [
            "Categories"
          ],
          "summary": "Get Single Category",
          "description": "",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        },
        "put": {
          "tags": [
            "Categories"
          ],
          "summary": "Update Category",
          "description": "",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Category"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        },
        "delete": {
          "tags": [
            "Categories"
          ],
          "summary": "Delete Category",
          "description": "",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "patch": {
          "tags": [
            "Categories"
          ],
          "summary": "Update Category",
          "description": "",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Category"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        }
      },
      "/blogs/": {
        "get": {
          "tags": [
            "Blogs"
          ],
          "summary": "List Blogs",
          "description": "  You can send query with endpoint for search[], sort[], page and limit.  <ul> Examples:   <li>URL/?<b>search[field1]=value1&search[field2]=value2</b></li>   <li>URL/?<b>sort[field1]=1&sort[field2]=-1</b></li>   <li>URL/?<b>page=2&limit=1</b></li>  </ul>  ",
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        },
        "post": {
          "tags": [
            "Blogs"
          ],
          "summary": "Create Blog",
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/blog"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Created"
            }
          }
        }
      },
      "/blogs/{id}": {
        "get": {
          "tags": [
            "Blogs"
          ],
          "summary": "Get Single Blog",
          "description": "",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        },
        "put": {
          "tags": [
            "Blogs"
          ],
          "summary": "Update Blog",
          "description": "",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/blog"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        },
        "delete": {
          "tags": [
            "Blogs"
          ],
          "summary": "Delete Blog",
          "description": "",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "patch": {
          "tags": [
            "Blogs"
          ],
          "summary": "Update Blog",
          "description": "",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/blog"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        }
      },
      "/blogs/{id}/getLike": {
        "get": {
          "tags": [
            "Blogs"
          ],
          "summary": "Get Like Info",
          "description": "",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        }
    },
    "/blogs/{id}/postLike": {
        "post": {
          "tags": [
            "Blogs"
          ],
          "summary": "Add/Remove Like",
          "description": "",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/blog"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        }
    },

      "/Comments/": {
        "get": {
          "tags": [
            "Comments"
          ],
          "summary": "List Comments",
          "description": "  You can send query with endpoint for search[], sort[], page and limit.  <ul> Examples:   <li>URL/?<b>search[field1]=value1&search[field2]=value2</b></li>   <li>URL/?<b>sort[field1]=1&sort[field2]=-1</b></li>   <li>URL/?<b>page=2&limit=1</b></li>  </ul>  ",
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        },
        "post": {
          "tags": [
            "Comments"
          ],
          "summary": "Create Comment",
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Comment"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Created"
            }
          }
        }
      },
      "/Comments/{id}": {
        "get": {
          "tags": [
            "Comments"
          ],
          "summary": "Get Single Comment",
          "description": "",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        },
        "put": {
          "tags": [
            "Comments"
          ],
          "summary": "Update Comment",
          "description": "",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Comment"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        },
        "delete": {
          "tags": [
            "Comments"
          ],
          "summary": "Delete Comment",
          "description": "",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "patch": {
          "tags": [
            "Comments"
          ],
          "summary": "Update Comment",
          "description": "",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Comment"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        }
      },
    "definitions": {
      "User": {
        "type": "object",
        "properties": {
          "username": {
            "type": "object",
            "properties": {
              "type": {
                "type": "function"
              },
              "trim": {
                "type": "boolean",
                "example": true
              },
              "required": {
                "type": "boolean",
                "example": true
              },
              "unique": {
                "type": "boolean",
                "example": true
              }
            }
          },
          "password": {
            "type": "object",
            "properties": {
              "type": {
                "type": "function"
              },
              "trim": {
                "type": "boolean",
                "example": true
              },
              "required": {
                "type": "boolean",
                "example": true
              }
            }
          },
          "email": {
            "type": "object",
            "properties": {
              "type": {
                "type": "function"
              },
              "trim": {
                "type": "boolean",
                "example": true
              },
              "required": {
                "type": "boolean",
                "example": true
              },
              "unique": {
                "type": "boolean",
                "example": true
              }
            }
          },
          "firstName": {
            "type": "object",
            "properties": {
              "type": {
                "type": "function"
              },
              "trim": {
                "type": "boolean",
                "example": true
              },
              "required": {
                "type": "boolean",
                "example": true
              }
            }
          },
          "lastName": {
            "type": "object",
            "properties": {
              "type": {
                "type": "function"
              },
              "trim": {
                "type": "boolean",
                "example": true
              },
              "required": {
                "type": "boolean",
                "example": true
              }
            }
          },
          "isActive": {
            "type": "object",
            "properties": {
              "type": {
                "type": "function"
              },
              "default": {
                "type": "boolean",
                "example": true
              }
            }
          },
          "isStaff": {
            "type": "object",
            "properties": {
              "type": {
                "type": "function"
              },
              "default": {
                "type": "boolean",
                "example": false
              }
            }
          },
          "isAdmin": {
            "type": "object",
            "properties": {
              "type": {
                "type": "function"
              },
              "default": {
                "type": "boolean",
                "example": false
              }
            }
          }
        }
      },
      "Brand": {
        "type": "object",
        "properties": {
          "name": {
            "type": "object",
            "properties": {
              "type": {
                "type": "function"
              },
              "trim": {
                "type": "boolean",
                "example": true
              },
              "required": {
                "type": "boolean",
                "example": true
              },
              "unique": {
                "type": "boolean",
                "example": true
              }
            }
          },
          "image": {
            "type": "object",
            "properties": {
              "type": {
                "type": "function"
              },
              "trim": {
                "type": "boolean",
                "example": true
              }
            }
          }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "name": {
            "type": "object",
            "properties": {
              "type": {
                "type": "function"
              },
              "trim": {
                "type": "boolean",
                "example": true
              },
              "required": {
                "type": "boolean",
                "example": true
              },
              "unique": {
                "type": "boolean",
                "example": true
              }
            }
          }
        }
      },
      "Blog": {
        "type": "object",
        "properties": {
          "name": {
            "type": "object",
            "properties": {
              "type": {
                "type": "function"
              },
              "trim": {
                "type": "boolean",
                "example": true
              },
              "required": {
                "type": "boolean",
                "example": true
              },
              "unique": {
                "type": "boolean",
                "example": true
              }
            }
          },
          "phone": {
            "type": "object",
            "properties": {
              "type": {
                "type": "function"
              },
              "trim": {
                "type": "boolean",
                "example": true
              }
            }
          },
          "address": {
            "type": "object",
            "properties": {
              "type": {
                "type": "function"
              },
              "trim": {
                "type": "boolean",
                "example": true
              }
            }
          },
          "image": {
            "type": "object",
            "properties": {
              "type": {
                "type": "function"
              },
              "trim": {
                "type": "boolean",
                "example": true
              }
            }
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "object",
            "properties": {
              "type": {
                "type": "function"
              },
              "ref": {
                "type": "string",
                "example": "Category"
              },
              "required": {
                "type": "boolean",
                "example": true
              }
            }
          },
          "brandId": {
            "type": "object",
            "properties": {
              "type": {
                "type": "function"
              },
              "ref": {
                "type": "string",
                "example": "Brand"
              },
              "required": {
                "type": "boolean",
                "example": true
              }
            }
          },
          "name": {
            "type": "object",
            "properties": {
              "type": {
                "type": "function"
              },
              "trim": {
                "type": "boolean",
                "example": true
              },
              "required": {
                "type": "boolean",
                "example": true
              }
            }
          },
          "quantity": {
            "type": "object",
            "properties": {
              "type": {
                "type": "function"
              },
              "default": {
                "type": "number",
                "example": 0
              }
            }
          }
        }
      },
      "Comment": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "object",
            "properties": {
              "type": {
                "type": "function"
              },
              "ref": {
                "type": "string",
                "example": "User"
              },
              "required": {
                "type": "boolean",
                "example": true
              }
            }
          },
          "blogId": {
            "type": "object",
            "properties": {
              "type": {
                "type": "function"
              },
              "ref": {
                "type": "string",
                "example": "Blog"
              },
              "required": {
                "type": "boolean",
                "example": true
              }
            }
          },
          "brandId": {
            "type": "object",
            "properties": {
              "type": {
                "type": "function"
              },
              "ref": {
                "type": "string",
                "example": "Brand"
              },
              "required": {
                "type": "boolean",
                "example": true
              }
            }
          },
          "productId": {
            "type": "object",
            "properties": {
              "type": {
                "type": "function"
              },
              "ref": {
                "type": "string",
                "example": "Product"
              },
              "required": {
                "type": "boolean",
                "example": true
              }
            }
          },
          "quantity": {
            "type": "object",
            "properties": {
              "type": {
                "type": "function"
              },
              "default": {
                "type": "number",
                "example": 0
              }
            }
          },
          "price": {
            "type": "object",
            "properties": {
              "type": {
                "type": "function"
              },
              "default": {
                "type": "number",
                "example": 0
              }
            }
          },
          "priceTotal": {
            "type": "object",
            "properties": {
              "type": {
                "type": "function"
              },
              "default": {
                "type": "number",
                "example": 0
              }
            }
          }
        }
      },
      "Sale": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "object",
            "properties": {
              "type": {
                "type": "function"
              },
              "ref": {
                "type": "string",
                "example": "User"
              },
              "required": {
                "type": "boolean",
                "example": true
              }
            }
          },
          "brandId": {
            "type": "object",
            "properties": {
              "type": {
                "type": "function"
              },
              "ref": {
                "type": "string",
                "example": "Brand"
              },
              "required": {
                "type": "boolean",
                "example": true
              }
            }
          },
          "productId": {
            "type": "object",
            "properties": {
              "type": {
                "type": "function"
              },
              "ref": {
                "type": "string",
                "example": "Product"
              },
              "required": {
                "type": "boolean",
                "example": true
              }
            }
          },
          "quantity": {
            "type": "object",
            "properties": {
              "type": {
                "type": "function"
              },
              "default": {
                "type": "number",
                "example": 0
              }
            }
          },
          "price": {
            "type": "object",
            "properties": {
              "type": {
                "type": "function"
              },
              "default": {
                "type": "number",
                "example": 0
              }
            }
          },
          "priceTotal": {
            "type": "object",
            "properties": {
              "type": {
                "type": "function"
              },
              "default": {
                "type": "number",
                "example": 0
              }
            }
          }
        }
      }
    },
    "security": [
      {
        "Token": []
      },
      {
        "Bearer": []
      }
    ]
    }
}